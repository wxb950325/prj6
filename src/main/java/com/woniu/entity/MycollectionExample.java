package com.woniu.entity;

import java.util.ArrayList;
import java.util.List;

public class MycollectionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    public MycollectionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCidIsNull() {
            addCriterion("cid is null");
            return (Criteria) this;
        }

        public Criteria andCidIsNotNull() {
            addCriterion("cid is not null");
            return (Criteria) this;
        }

        public Criteria andCidEqualTo(Integer value) {
            addCriterion("cid =", value, "cid");
            return (Criteria) this;
        }

        public Criteria andCidNotEqualTo(Integer value) {
            addCriterion("cid <>", value, "cid");
            return (Criteria) this;
        }

        public Criteria andCidGreaterThan(Integer value) {
            addCriterion("cid >", value, "cid");
            return (Criteria) this;
        }

        public Criteria andCidGreaterThanOrEqualTo(Integer value) {
            addCriterion("cid >=", value, "cid");
            return (Criteria) this;
        }

        public Criteria andCidLessThan(Integer value) {
            addCriterion("cid <", value, "cid");
            return (Criteria) this;
        }

        public Criteria andCidLessThanOrEqualTo(Integer value) {
            addCriterion("cid <=", value, "cid");
            return (Criteria) this;
        }

        public Criteria andCidIn(List<Integer> values) {
            addCriterion("cid in", values, "cid");
            return (Criteria) this;
        }

        public Criteria andCidNotIn(List<Integer> values) {
            addCriterion("cid not in", values, "cid");
            return (Criteria) this;
        }

        public Criteria andCidBetween(Integer value1, Integer value2) {
            addCriterion("cid between", value1, value2, "cid");
            return (Criteria) this;
        }

        public Criteria andCidNotBetween(Integer value1, Integer value2) {
            addCriterion("cid not between", value1, value2, "cid");
            return (Criteria) this;
        }

        public Criteria andUidIsNull() {
            addCriterion("uid is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("uid is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Integer value) {
            addCriterion("uid =", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Integer value) {
            addCriterion("uid <>", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Integer value) {
            addCriterion("uid >", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Integer value) {
            addCriterion("uid >=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Integer value) {
            addCriterion("uid <", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Integer value) {
            addCriterion("uid <=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Integer> values) {
            addCriterion("uid in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Integer> values) {
            addCriterion("uid not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Integer value1, Integer value2) {
            addCriterion("uid between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Integer value1, Integer value2) {
            addCriterion("uid not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andCollectiontypeIsNull() {
            addCriterion("collectionType is null");
            return (Criteria) this;
        }

        public Criteria andCollectiontypeIsNotNull() {
            addCriterion("collectionType is not null");
            return (Criteria) this;
        }

        public Criteria andCollectiontypeEqualTo(Integer value) {
            addCriterion("collectionType =", value, "collectiontype");
            return (Criteria) this;
        }

        public Criteria andCollectiontypeNotEqualTo(Integer value) {
            addCriterion("collectionType <>", value, "collectiontype");
            return (Criteria) this;
        }

        public Criteria andCollectiontypeGreaterThan(Integer value) {
            addCriterion("collectionType >", value, "collectiontype");
            return (Criteria) this;
        }

        public Criteria andCollectiontypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("collectionType >=", value, "collectiontype");
            return (Criteria) this;
        }

        public Criteria andCollectiontypeLessThan(Integer value) {
            addCriterion("collectionType <", value, "collectiontype");
            return (Criteria) this;
        }

        public Criteria andCollectiontypeLessThanOrEqualTo(Integer value) {
            addCriterion("collectionType <=", value, "collectiontype");
            return (Criteria) this;
        }

        public Criteria andCollectiontypeIn(List<Integer> values) {
            addCriterion("collectionType in", values, "collectiontype");
            return (Criteria) this;
        }

        public Criteria andCollectiontypeNotIn(List<Integer> values) {
            addCriterion("collectionType not in", values, "collectiontype");
            return (Criteria) this;
        }

        public Criteria andCollectiontypeBetween(Integer value1, Integer value2) {
            addCriterion("collectionType between", value1, value2, "collectiontype");
            return (Criteria) this;
        }

        public Criteria andCollectiontypeNotBetween(Integer value1, Integer value2) {
            addCriterion("collectionType not between", value1, value2, "collectiontype");
            return (Criteria) this;
        }

        public Criteria andCollectionidIsNull() {
            addCriterion("collectionId is null");
            return (Criteria) this;
        }

        public Criteria andCollectionidIsNotNull() {
            addCriterion("collectionId is not null");
            return (Criteria) this;
        }

        public Criteria andCollectionidEqualTo(Integer value) {
            addCriterion("collectionId =", value, "collectionid");
            return (Criteria) this;
        }

        public Criteria andCollectionidNotEqualTo(Integer value) {
            addCriterion("collectionId <>", value, "collectionid");
            return (Criteria) this;
        }

        public Criteria andCollectionidGreaterThan(Integer value) {
            addCriterion("collectionId >", value, "collectionid");
            return (Criteria) this;
        }

        public Criteria andCollectionidGreaterThanOrEqualTo(Integer value) {
            addCriterion("collectionId >=", value, "collectionid");
            return (Criteria) this;
        }

        public Criteria andCollectionidLessThan(Integer value) {
            addCriterion("collectionId <", value, "collectionid");
            return (Criteria) this;
        }

        public Criteria andCollectionidLessThanOrEqualTo(Integer value) {
            addCriterion("collectionId <=", value, "collectionid");
            return (Criteria) this;
        }

        public Criteria andCollectionidIn(List<Integer> values) {
            addCriterion("collectionId in", values, "collectionid");
            return (Criteria) this;
        }

        public Criteria andCollectionidNotIn(List<Integer> values) {
            addCriterion("collectionId not in", values, "collectionid");
            return (Criteria) this;
        }

        public Criteria andCollectionidBetween(Integer value1, Integer value2) {
            addCriterion("collectionId between", value1, value2, "collectionid");
            return (Criteria) this;
        }

        public Criteria andCollectionidNotBetween(Integer value1, Integer value2) {
            addCriterion("collectionId not between", value1, value2, "collectionid");
            return (Criteria) this;
        }

        public Criteria andCollectionnameIsNull() {
            addCriterion("collectionName is null");
            return (Criteria) this;
        }

        public Criteria andCollectionnameIsNotNull() {
            addCriterion("collectionName is not null");
            return (Criteria) this;
        }

        public Criteria andCollectionnameEqualTo(String value) {
            addCriterion("collectionName =", value, "collectionname");
            return (Criteria) this;
        }

        public Criteria andCollectionnameNotEqualTo(String value) {
            addCriterion("collectionName <>", value, "collectionname");
            return (Criteria) this;
        }

        public Criteria andCollectionnameGreaterThan(String value) {
            addCriterion("collectionName >", value, "collectionname");
            return (Criteria) this;
        }

        public Criteria andCollectionnameGreaterThanOrEqualTo(String value) {
            addCriterion("collectionName >=", value, "collectionname");
            return (Criteria) this;
        }

        public Criteria andCollectionnameLessThan(String value) {
            addCriterion("collectionName <", value, "collectionname");
            return (Criteria) this;
        }

        public Criteria andCollectionnameLessThanOrEqualTo(String value) {
            addCriterion("collectionName <=", value, "collectionname");
            return (Criteria) this;
        }

        public Criteria andCollectionnameLike(String value) {
            addCriterion("collectionName like", value, "collectionname");
            return (Criteria) this;
        }

        public Criteria andCollectionnameNotLike(String value) {
            addCriterion("collectionName not like", value, "collectionname");
            return (Criteria) this;
        }

        public Criteria andCollectionnameIn(List<String> values) {
            addCriterion("collectionName in", values, "collectionname");
            return (Criteria) this;
        }

        public Criteria andCollectionnameNotIn(List<String> values) {
            addCriterion("collectionName not in", values, "collectionname");
            return (Criteria) this;
        }

        public Criteria andCollectionnameBetween(String value1, String value2) {
            addCriterion("collectionName between", value1, value2, "collectionname");
            return (Criteria) this;
        }

        public Criteria andCollectionnameNotBetween(String value1, String value2) {
            addCriterion("collectionName not between", value1, value2, "collectionname");
            return (Criteria) this;
        }

        public Criteria andCollectionurlIsNull() {
            addCriterion("collectionURL is null");
            return (Criteria) this;
        }

        public Criteria andCollectionurlIsNotNull() {
            addCriterion("collectionURL is not null");
            return (Criteria) this;
        }

        public Criteria andCollectionurlEqualTo(String value) {
            addCriterion("collectionURL =", value, "collectionurl");
            return (Criteria) this;
        }

        public Criteria andCollectionurlNotEqualTo(String value) {
            addCriterion("collectionURL <>", value, "collectionurl");
            return (Criteria) this;
        }

        public Criteria andCollectionurlGreaterThan(String value) {
            addCriterion("collectionURL >", value, "collectionurl");
            return (Criteria) this;
        }

        public Criteria andCollectionurlGreaterThanOrEqualTo(String value) {
            addCriterion("collectionURL >=", value, "collectionurl");
            return (Criteria) this;
        }

        public Criteria andCollectionurlLessThan(String value) {
            addCriterion("collectionURL <", value, "collectionurl");
            return (Criteria) this;
        }

        public Criteria andCollectionurlLessThanOrEqualTo(String value) {
            addCriterion("collectionURL <=", value, "collectionurl");
            return (Criteria) this;
        }

        public Criteria andCollectionurlLike(String value) {
            addCriterion("collectionURL like", value, "collectionurl");
            return (Criteria) this;
        }

        public Criteria andCollectionurlNotLike(String value) {
            addCriterion("collectionURL not like", value, "collectionurl");
            return (Criteria) this;
        }

        public Criteria andCollectionurlIn(List<String> values) {
            addCriterion("collectionURL in", values, "collectionurl");
            return (Criteria) this;
        }

        public Criteria andCollectionurlNotIn(List<String> values) {
            addCriterion("collectionURL not in", values, "collectionurl");
            return (Criteria) this;
        }

        public Criteria andCollectionurlBetween(String value1, String value2) {
            addCriterion("collectionURL between", value1, value2, "collectionurl");
            return (Criteria) this;
        }

        public Criteria andCollectionurlNotBetween(String value1, String value2) {
            addCriterion("collectionURL not between", value1, value2, "collectionurl");
            return (Criteria) this;
        }

        public Criteria andIsdeleteIsNull() {
            addCriterion("isdelete is null");
            return (Criteria) this;
        }

        public Criteria andIsdeleteIsNotNull() {
            addCriterion("isdelete is not null");
            return (Criteria) this;
        }

        public Criteria andIsdeleteEqualTo(Integer value) {
            addCriterion("isdelete =", value, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteNotEqualTo(Integer value) {
            addCriterion("isdelete <>", value, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteGreaterThan(Integer value) {
            addCriterion("isdelete >", value, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteGreaterThanOrEqualTo(Integer value) {
            addCriterion("isdelete >=", value, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteLessThan(Integer value) {
            addCriterion("isdelete <", value, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteLessThanOrEqualTo(Integer value) {
            addCriterion("isdelete <=", value, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteIn(List<Integer> values) {
            addCriterion("isdelete in", values, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteNotIn(List<Integer> values) {
            addCriterion("isdelete not in", values, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteBetween(Integer value1, Integer value2) {
            addCriterion("isdelete between", value1, value2, "isdelete");
            return (Criteria) this;
        }

        public Criteria andIsdeleteNotBetween(Integer value1, Integer value2) {
            addCriterion("isdelete not between", value1, value2, "isdelete");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mycollection
     *
     * @mbggenerated do_not_delete_during_merge Tue Aug 20 16:07:27 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table mycollection
     *
     * @mbggenerated Tue Aug 20 16:07:27 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}